@startuml mastermind_clases

class Mastermind{
    - playGames()
}

class GameView{
    - playGames()
    - isResumed()
    - playGame()
}

class TurnView{
    - readPlayers()
    - interact()
    - visitHumanPlayer()
    - visitRandomPlayer()
    - visitHumanSecretPlayer()
    - visitRandomSecretPlayer()
}

class HumanPlayerView{
    - readCombination()
    - hasValidLength()
    - hasValidColors()
    - hasRepetedColors()
    - isNotValid()
}

class RandomPlayerView{
    - readCombination()
}

class Turn{
    {static} MAX_PLAYERS = 2  
    - reset()
    - play()
    - getPlayers()
    - getSecretPlayer()
    - getActivePlayer()
    - setSecretCombination()
}

class BoardView{
    - showTitle()
    - showIt()
    - showResult()
}

class Board {
    {static} COMBINATION_LENGTH = 4
    {static} POSIBLE_COLORS = "rgbypw";
    {static} NAME_COLORS = ["Red", "Green", "Blue", "Yellow", "Pink", "White"]
    {static} MAX_ATTEMPS = 10
    - propousalsCombinations[]
    - secretCombination = ""
    - currentPropousalCombination = ""   
    - isWinner()
    - isLooser()
    - isFinished()
    - addPropouseCombination()
    - getResult()
    - getMaxAttemps()
    - getAttemps()
    - getPropousalsCombinations()
}

class HumanPlayer{
    accept()
    acceptSecret()
}

class RandomPlayer{
    accept()
    acceptSecret()
}

class GameMode{
    - numPlayers
    - possibleModes
    - MIN
    - MAX
    - read()
}

class ClosedInterval{
    - min
    - max
    - isIncluded()
}

class YesNoDialogView{
    - isAfirmative()
    - isNegative()
}

Mastermind *-down-> GameView

GameView *-down-> BoardView
GameView *-down-> TurnView
GameView *-down-> Board
GameView *-down-> Turn
GameView *-down-> YesNoDialogView

TurnView .-down-> Turn
TurnView *-down-> GameMode
TurnView .-down-> HumanPlayerView
TurnView .-down-> RandomPlayerView

Turn .-down-> Board
Turn *-down-> HumanPlayer
Turn *-down-> RandomPlayer

BoardView .-down-> Board

HumanPlayerView .-down-> Board

RandomPlayerView .-down-> Board

GameMode *-down-> ClosedInterval
@enduml